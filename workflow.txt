///// Flujo del programa y funciones /////

 // Push_swap.c
	|
	|--- main(int argc, char **argv)
	|     |--- parse(argc, argv, &stack_a, _words)
	|	    |	|--- calc_nelements(argc, argv)
	|		|			|--- ft_count_arg(argv[i++], ' ')
	|		|					|--- ft_check_empty(s)
	|		|							|--- error_message("Error, 1)
	|		|
	|		|
	|		|--- ft_split(argv[i++], ' '); //Libft
	|		|--- ft_check_string(words[k++]);
	|		|		|--- ft_numeric(str);
	|		|		|		|--- error_message("Error", 1)
	|		|		|
	|		|		|--- ft_strlen //libft
	|		|		|--- error_message("Error", 1);
	|		|		|--- ft_atoi_check(str);
	|		|				|--- error_message ("Error", 1);
	|		|				|--- ft_check_range (result)
	|		|						|--- error_message ("Error", 1);
	|		|
	|		|--- ft_free_argv(words)
	|		|--- ft_push(t_stack **a, t_stack **b, char flag)
	|
	|--- ft_is_ordened(stack_a)
	|		|--- ft_lstsize(head);
	|
	|--- ft_check_equals(stack_a);
	|		|--- error_message("Error", 1);
	|
	|--- ft_sort_index(stack_a);
	|
	|--- ft_sort_lobby(&stack_a, &stack_b)
	|		|--- ft_lstsize(*stack_a); //libft
	|		|--- ft_swap(stack_a, 'a');
	|		|
	|		|--- (elige entre sort(three)(four)(five) o ksort)
	|		|
	|		|--- ksort_part_one(t_stack **stack_a, t_stack **stack_b, int length)
	|		|		|---ft_sqrt(length);
	|		|		|--- ft_push(stack_a, stack_b, 'b')
	|		|
	|		|--- ksort_part_two(t_stack **stack_a, t_stack **stack_b, int length)
	|				|--- count_r(*stack_b, length - 1)
	|				|--- ops
	|
	|--- ft_clean_lst(&stack_a)
	|--- ft_clean_lst(&stack_b)
	|--- free(number);
	|
	|-----------------------------------------------------END-----------------------------------------------------|